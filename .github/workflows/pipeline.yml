name: pipeline
on: [push]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout / copy repo app
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: gradle test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout / copy repo app
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      - name: Run the Gradle package task
        run: gradle :presentation:build

  sonar-cloud:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run jacoco coverage
        run: gradle jacocoTestReport

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=postech-fiap
            -Dsonar.projectKey=postech-fiap_pagamento-api
            -Dsonar.sonar.host.url=https://sonarcloud.io
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
            -Dsonar.sources=domain/src/main/kotlin,infrastructure/src/main/kotlin,presentation/src/main/kotlin

  docker-app-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout / copy repo app
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t ${{secrets.docker_username}}/presentation-0.0.1-snapshot .

      - name: Push image docker
        run: docker push ${{secrets.docker_username}}/presentation-0.0.1-snapshot

#  deploy-to-aws-eks:
#    needs: docker-app-image
#    if: github.ref == 'refs/heads/feature/rabbitmq-pagamento'
#    uses: ./.github/workflows/deploy-eks.yml
#    secrets: inherit